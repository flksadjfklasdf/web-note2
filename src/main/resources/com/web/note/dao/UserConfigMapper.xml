<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.web.note.dao.UserConfigMapper">
    <resultMap id="BaseResultMap" type="com.web.note.entity.UserConfig">
        <id column="config_id" property="configId" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="config_key" property="configKey" jdbcType="VARCHAR"/>
        <result column="config_value" property="configValue" jdbcType="VARCHAR"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        config_id, user_id, config_key, config_value, created_at, updated_at
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.web.note.entity.UserConfigExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from user_config
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from user_config
        where config_id = #{configId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete
        from user_config
        where config_id = #{configId,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="com.web.note.entity.UserConfigExample">
        delete from user_config
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.web.note.entity.UserConfig">
        insert into user_config (config_id, user_id, config_key,
                                 config_value, created_at, updated_at)
        values (#{configId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{configKey,jdbcType=VARCHAR},
                #{configValue,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.web.note.entity.UserConfig">
        insert into user_config
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="configId != null">
                config_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="configKey != null">
                config_key,
            </if>
            <if test="configValue != null">
                config_value,
            </if>
            <if test="createdAt != null">
                created_at,
            </if>
            <if test="updatedAt != null">
                updated_at,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="configId != null">
                #{configId,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="configKey != null">
                #{configKey,jdbcType=VARCHAR},
            </if>
            <if test="configValue != null">
                #{configValue,jdbcType=VARCHAR},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                #{updatedAt,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.web.note.entity.UserConfigExample" resultType="java.lang.Integer">
        select count(*) from user_config
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update user_config
        <set>
            <if test="record.configId != null">
                config_id = #{record.configId,jdbcType=VARCHAR},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=VARCHAR},
            </if>
            <if test="record.configKey != null">
                config_key = #{record.configKey,jdbcType=VARCHAR},
            </if>
            <if test="record.configValue != null">
                config_value = #{record.configValue,jdbcType=VARCHAR},
            </if>
            <if test="record.createdAt != null">
                created_at = #{record.createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updatedAt != null">
                updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update user_config
        set config_id = #{record.configId,jdbcType=VARCHAR},
        user_id = #{record.userId,jdbcType=VARCHAR},
        config_key = #{record.configKey,jdbcType=VARCHAR},
        config_value = #{record.configValue,jdbcType=VARCHAR},
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.web.note.entity.UserConfig">
        update user_config
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="configKey != null">
                config_key = #{configKey,jdbcType=VARCHAR},
            </if>
            <if test="configValue != null">
                config_value = #{configValue,jdbcType=VARCHAR},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt,jdbcType=TIMESTAMP},
            </if>
        </set>
        where config_id = #{configId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.web.note.entity.UserConfig">
        update user_config
        set user_id      = #{userId,jdbcType=VARCHAR},
            config_key   = #{configKey,jdbcType=VARCHAR},
            config_value = #{configValue,jdbcType=VARCHAR},
            created_at   = #{createdAt,jdbcType=TIMESTAMP},
            updated_at   = #{updatedAt,jdbcType=TIMESTAMP}
        where config_id = #{configId,jdbcType=VARCHAR}
    </update>
</mapper>